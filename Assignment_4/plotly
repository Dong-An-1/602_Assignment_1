import numpy as np
import plotly.graph_objs as go
import ipywidgets as widgets
from ipywidgets import interact, VBox, HTML
from IPython.display import display

# 绘制正态分布
def draw_normal_plotly(mean, std_dev):
    # 生成数据
    x = np.linspace(mean - 4*std_dev, mean + 4*std_dev, 500)
    y = (1/(std_dev * np.sqrt(2 * np.pi))) * np.exp(-0.5 * ((x - mean)/std_dev)**2)
    
    # 创建 Plotly 图表
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name='Normal Distribution'))
    
    # 标注均值和标准差
    fig.add_vline(x=mean, line=dict(color='red', dash='dash'), name='Mean')
    
    # 设置图表布局
    fig.update_layout(
        title=f"Normal Distribution (Mean: {mean}, Std Dev: {std_dev})",
        xaxis_title="x",
        yaxis_title="Probability",
        template="plotly_white",
        showlegend=True
    )
    
    # 显示图表
    fig.show()

# 更新图像
def update(mean, std_dev):
    draw_normal_plotly(mean, std_dev)

# 创建滑动条控件
mean_slider = widgets.FloatSlider(value=0, min=-5, max=5, step=0.1, description='Mean')
std_slider = widgets.FloatSlider(value=1, min=0.1, max=2, step=0.1, description='Std Dev')
reset_button = widgets.Button(description="Reset")

# 重置功能
def reset_values(b):
    mean_slider.value = 0
    std_slider.value = 1

reset_button.on_click(reset_values)

# 动态交互
interact(update, mean=mean_slider, std_dev=std_slider)

# 显示滑动条和按钮
display(VBox([mean_slider, std_slider, reset_button]))
